// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu component should be a snapshot for subscriber 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    alwaysBounceVertical={false}
    bounces={false}
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
    showsVerticalScrollIndicator={false}
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "display": "flex",
        },
      ]
    }
  >
    <View>
      <RNCSafeAreaView
        edges={
          Array [
            "top",
          ]
        }
        style={
          Array [
            Object {
              "backgroundColor": "#FFCB05",
              "display": "flex",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "display": "flex",
                "padding": 16,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "height": 16,
                      "marginRight": 24,
                      "width": 16,
                    },
                  ]
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={Object {}}
                  >
                    <SvgMock
                      fill="#4D4D4D"
                    />
                  </View>
                </RNGestureHandlerButton>
              </View>
              <SvgMock
                height={27}
                viewBox="0 2 270 40"
                width={169}
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "display": "flex",
                    "height": 24,
                    "width": 24,
                  },
                ]
              }
            >
              <RNGestureHandlerButton
                collapsable={false}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
              >
                <View
                  accessible={true}
                  style={Object {}}
                >
                  <SvgMock
                    fill="#4D4D4D"
                    testID="icon-account"
                  />
                </View>
              </RNGestureHandlerButton>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "display": "flex",
                  "paddingBottom": 16,
                  "paddingVertical": 20,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#050505",
                    "display": "flex",
                    "fontFamily": "NotoSans",
                    "fontSize": 16,
                    "lineHeight": 24,
                  },
                  Object {
                    "fontFamily": "NotoSans-Regular",
                  },
                ]
              }
            >
              Hola
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#050505",
                    "display": "flex",
                    "fontFamily": "NotoSans",
                    "fontSize": 16,
                    "fontWeight": "700",
                    "lineHeight": 24,
                    "textTransform": "uppercase",
                  },
                  Object {
                    "fontFamily": "NotoSans-Bold",
                  },
                ]
              }
            >
              jhon doe
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#050505",
                    "display": "flex",
                    "fontFamily": "NotoSans",
                    "fontSize": 16,
                    "lineHeight": 24,
                  },
                  Object {
                    "fontFamily": "NotoSans-Regular",
                  },
                ]
              }
            >
              Tienes una suscripci√≥n activa
            </Text>
          </View>
        </View>
      </RNCSafeAreaView>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#FFCB05",
              "borderBottomWidth": 1,
              "display": "flex",
              "paddingHorizontal": 24,
              "paddingVertical": 32,
            },
          ]
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#AD9130",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row-reverse",
                    "height": 52,
                    "paddingHorizontal": 24,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "marginRight": 8,
                    },
                  ]
                }
              >
                <Icon
                  color="#2e3443"
                  name="magnify"
                  size={22}
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "flex": 1,
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#AD9130",
                        "display": "flex",
                        "fontFamily": "NotoSans",
                        "fontSize": 16,
                        "lineHeight": 24,
                      },
                      Object {
                        "fontFamily": "NotoSans-Regular",
                      },
                    ]
                  }
                >
                  Buscar
                </Text>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#FFCB05",
              "borderBottomWidth": 1,
              "display": "flex",
              "flex": 1,
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            },
          ]
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            collapsable={false}
            nativeID="animatedComponent"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "borderBottomColor": "#C1C1C1",
                    "borderBottomWidth": 0,
                    "display": "flex",
                    "flexDirection": "row",
                    "marginBottom": 0,
                    "paddingBottom": 16,
                    "width": 340,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "display": "flex",
                        "height": 16,
                        "marginRight": 8,
                        "width": 16,
                      },
                    ]
                  }
                >
                  <SvgMock
                    fill="#000000"
                  />
                </View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#3C3C3C",
                        "display": "flex",
                        "fontFamily": "NotoSans",
                        "fontSize": 14,
                        "lineHeight": 20,
                      },
                      Object {
                        "fontFamily": "NotoSans-Regular",
                      },
                    ]
                  }
                >
                  Leer Luego
                </Text>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#FFCB05",
              "borderBottomWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "display": "flex",
                "paddingBottom": 16,
                "width": "100%",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#2e3443",
                  "display": "flex",
                  "fontFamily": "NotoSans",
                  "fontSize": 16,
                  "fontWeight": "700",
                  "lineHeight": 24,
                },
                Object {
                  "fontFamily": "NotoSans-Bold",
                },
              ]
            }
          >
            SECCIONES
          </Text>
        </View>
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            collapsable={false}
            nativeID="animatedComponent"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderTopColor": "#C1C1C1",
                    "borderTopWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "height": 56,
                    "width": 340,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "height": 16,
                      "marginRight": 8,
                      "padding": 4,
                      "width": 16,
                    },
                  ]
                }
              >
                <SvgMock
                  fill="#6B7280"
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "flex": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#3C3C3C",
                        "display": "flex",
                        "fontFamily": "NotoSans",
                        "fontSize": 14,
                        "lineHeight": 20,
                      },
                      Object {
                        "fontFamily": "NotoSans-Regular",
                      },
                    ]
                  }
                >
                  Portada
                </Text>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFDF4",
              "display": "flex",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            },
          ]
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            collapsable={false}
            nativeID="animatedComponent"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "display": "flex",
                    "marginBottom": 16,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#8E8E8E",
                      "display": "flex",
                      "fontFamily": "NotoSans",
                      "fontSize": 14,
                      "lineHeight": 20,
                    },
                    Object {
                      "fontFamily": "NotoSans-Regular",
                    },
                  ]
                }
              >
                T√©rminos y condiciones de uso
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
        <Text
          style={
            Array [
              Object {
                "color": "#6B7280",
                "display": "flex",
                "fontFamily": "NotoSans",
                "fontSize": 14,
                "lineHeight": 20,
              },
              Object {
                "fontFamily": "NotoSans-Regular",
              },
            ]
          }
        >
          Versi√≥n 
          10.5.50
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaProvider>
`;

exports[`Menu component should go to sign up screen when you press button 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    alwaysBounceVertical={false}
    bounces={false}
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
    showsVerticalScrollIndicator={false}
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "display": "flex",
        },
      ]
    }
  >
    <View>
      <RNCSafeAreaView
        edges={
          Array [
            "top",
          ]
        }
        style={
          Array [
            Object {
              "backgroundColor": "#FFCB05",
              "display": "flex",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "display": "flex",
                "padding": 16,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "height": 16,
                      "marginRight": 24,
                      "width": 16,
                    },
                  ]
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={Object {}}
                  >
                    <SvgMock
                      fill="#4D4D4D"
                    />
                  </View>
                </RNGestureHandlerButton>
              </View>
              <SvgMock
                height={27}
                viewBox="0 2 270 40"
                width={169}
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "display": "flex",
                    "height": 24,
                    "width": 24,
                  },
                ]
              }
            >
              <RNGestureHandlerButton
                collapsable={false}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
              >
                <View
                  accessible={true}
                  style={Object {}}
                >
                  <SvgMock
                    fill="#4D4D4D"
                    testID="icon-account"
                  />
                </View>
              </RNGestureHandlerButton>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "display": "flex",
                  "paddingBottom": 16,
                  "paddingVertical": 20,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "display": "flex",
                    "paddingVertical": 20,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#050505",
                      "display": "flex",
                      "fontFamily": "NotoSans",
                      "fontSize": 30,
                      "fontWeight": "300",
                      "lineHeight": 36,
                    },
                    Object {
                      "fontFamily": "NotoSans-Light",
                    },
                  ]
                }
              >
                ¬°Hola!
                

                Crea una 
                
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#050505",
                        "display": "flex",
                        "fontFamily": "NotoSans",
                        "fontSize": 30,
                        "fontWeight": "700",
                        "lineHeight": 36,
                      },
                      Object {
                        "fontFamily": "NotoSans-Bold",
                      },
                    ]
                  }
                >
                  cuenta gratis 
                  
                </Text>
                para navegar por la app
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#050505",
                    "borderRadius": 6,
                    "display": "flex",
                    "elevation": 3,
                    "flexDirection": "row",
                    "flexWrap": "nowrap",
                    "height": 48,
                    "justifyContent": "center",
                    "opacity": 1,
                    "shadowColor": "#050505",
                    "shadowOffset": Object {
                      "height": 3,
                      "width": 0,
                    },
                    "shadowOpacity": 0.32,
                    "shadowRadius": 6,
                    "width": "100%",
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "display": "flex",
                      "fontFamily": "NotoSans",
                      "fontSize": 18,
                      "fontWeight": "700",
                      "lineHeight": 28,
                    },
                    Object {
                      "fontFamily": "NotoSans-Bold",
                    },
                  ]
                }
              >
                ¬°REG√çSTRATE!
              </Text>
            </View>
          </View>
        </View>
      </RNCSafeAreaView>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#FFCB05",
              "borderBottomWidth": 1,
              "display": "flex",
              "paddingHorizontal": 24,
              "paddingVertical": 32,
            },
          ]
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#AD9130",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row-reverse",
                    "height": 52,
                    "paddingHorizontal": 24,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "marginRight": 8,
                    },
                  ]
                }
              >
                <Icon
                  color="#2e3443"
                  name="magnify"
                  size={22}
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "flex": 1,
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#AD9130",
                        "display": "flex",
                        "fontFamily": "NotoSans",
                        "fontSize": 16,
                        "lineHeight": 24,
                      },
                      Object {
                        "fontFamily": "NotoSans-Regular",
                      },
                    ]
                  }
                >
                  Buscar
                </Text>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#FFCB05",
              "borderBottomWidth": 1,
              "display": "flex",
              "flex": 1,
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            },
          ]
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            collapsable={false}
            nativeID="animatedComponent"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "borderBottomColor": "#C1C1C1",
                    "borderBottomWidth": 0,
                    "display": "flex",
                    "flexDirection": "row",
                    "marginBottom": 0,
                    "paddingBottom": 16,
                    "width": 340,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "display": "flex",
                        "height": 16,
                        "marginRight": 8,
                        "width": 16,
                      },
                    ]
                  }
                >
                  <SvgMock
                    fill="#000000"
                  />
                </View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#3C3C3C",
                        "display": "flex",
                        "fontFamily": "NotoSans",
                        "fontSize": 14,
                        "lineHeight": 20,
                      },
                      Object {
                        "fontFamily": "NotoSans-Regular",
                      },
                    ]
                  }
                >
                  Leer Luego
                </Text>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#FFCB05",
              "borderBottomWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "display": "flex",
                "paddingBottom": 16,
                "width": "100%",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#2e3443",
                  "display": "flex",
                  "fontFamily": "NotoSans",
                  "fontSize": 16,
                  "fontWeight": "700",
                  "lineHeight": 24,
                },
                Object {
                  "fontFamily": "NotoSans-Bold",
                },
              ]
            }
          >
            SECCIONES
          </Text>
        </View>
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            collapsable={false}
            nativeID="animatedComponent"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderTopColor": "#C1C1C1",
                    "borderTopWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "height": 56,
                    "width": 340,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "height": 16,
                      "marginRight": 8,
                      "padding": 4,
                      "width": 16,
                    },
                  ]
                }
              >
                <SvgMock
                  fill="#6B7280"
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "flex": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#3C3C3C",
                        "display": "flex",
                        "fontFamily": "NotoSans",
                        "fontSize": 14,
                        "lineHeight": 20,
                      },
                      Object {
                        "fontFamily": "NotoSans-Regular",
                      },
                    ]
                  }
                >
                  Portada
                </Text>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFDF4",
              "display": "flex",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            },
          ]
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            collapsable={false}
            nativeID="animatedComponent"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "display": "flex",
                    "marginBottom": 16,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#8E8E8E",
                      "display": "flex",
                      "fontFamily": "NotoSans",
                      "fontSize": 14,
                      "lineHeight": 20,
                    },
                    Object {
                      "fontFamily": "NotoSans-Regular",
                    },
                  ]
                }
              >
                T√©rminos y condiciones de uso
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
        <Text
          style={
            Array [
              Object {
                "color": "#6B7280",
                "display": "flex",
                "fontFamily": "NotoSans",
                "fontSize": 14,
                "lineHeight": 20,
              },
              Object {
                "fontFamily": "NotoSans-Regular",
              },
            ]
          }
        >
          Versi√≥n 
          10.5.50
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaProvider>
`;

exports[`Menu component should open paywall modal when you are press subscription button 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    alwaysBounceVertical={false}
    bounces={false}
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
    showsVerticalScrollIndicator={false}
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "display": "flex",
        },
      ]
    }
  >
    <View>
      <RNCSafeAreaView
        edges={
          Array [
            "top",
          ]
        }
        style={
          Array [
            Object {
              "backgroundColor": "#FFCB05",
              "display": "flex",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "display": "flex",
                "padding": 16,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "height": 16,
                      "marginRight": 24,
                      "width": 16,
                    },
                  ]
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={Object {}}
                  >
                    <SvgMock
                      fill="#4D4D4D"
                    />
                  </View>
                </RNGestureHandlerButton>
              </View>
              <SvgMock
                height={27}
                viewBox="0 2 270 40"
                width={169}
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "display": "flex",
                    "height": 24,
                    "width": 24,
                  },
                ]
              }
            >
              <RNGestureHandlerButton
                collapsable={false}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
              >
                <View
                  accessible={true}
                  style={Object {}}
                >
                  <SvgMock
                    fill="#4D4D4D"
                    testID="icon-account"
                  />
                </View>
              </RNGestureHandlerButton>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "display": "flex",
                  "paddingBottom": 16,
                  "paddingVertical": 20,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "display": "flex",
                    "paddingBottom": 20,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#050505",
                      "display": "flex",
                      "fontFamily": "NotoSans",
                      "fontSize": 16,
                      "lineHeight": 24,
                    },
                    Object {
                      "fontFamily": "NotoSans-Regular",
                    },
                  ]
                }
              >
                Hola
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#050505",
                      "display": "flex",
                      "fontFamily": "NotoSans",
                      "fontSize": 16,
                      "fontWeight": "700",
                      "lineHeight": 20,
                      "textTransform": "uppercase",
                    },
                    Object {
                      "fontFamily": "NotoSans-Bold",
                    },
                  ]
                }
              >
                jhon doe
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#050505",
                      "display": "flex",
                      "fontFamily": "NotoSans",
                      "fontSize": 16,
                      "lineHeight": 24,
                    },
                    Object {
                      "fontFamily": "NotoSans-Regular",
                    },
                  ]
                }
              >
                Suscr√≠bete y disfruta del acceso ilimitado a los contenidos y de los beneficios del Club El Comercio
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#050505",
                    "borderRadius": 6,
                    "display": "flex",
                    "elevation": 3,
                    "flexDirection": "row",
                    "flexWrap": "nowrap",
                    "height": 48,
                    "justifyContent": "center",
                    "opacity": 1,
                    "shadowColor": "#050505",
                    "shadowOffset": Object {
                      "height": 3,
                      "width": 0,
                    },
                    "shadowOpacity": 0.32,
                    "shadowRadius": 6,
                    "width": "100%",
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "display": "flex",
                      "fontFamily": "NotoSans",
                      "fontSize": 18,
                      "fontWeight": "700",
                      "lineHeight": 28,
                    },
                    Object {
                      "fontFamily": "NotoSans-Bold",
                    },
                  ]
                }
              >
                ¬°SUSCR√çBETE!
              </Text>
            </View>
          </View>
        </View>
      </RNCSafeAreaView>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#FFCB05",
              "borderBottomWidth": 1,
              "display": "flex",
              "paddingHorizontal": 24,
              "paddingVertical": 32,
            },
          ]
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#AD9130",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row-reverse",
                    "height": 52,
                    "paddingHorizontal": 24,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "marginRight": 8,
                    },
                  ]
                }
              >
                <Icon
                  color="#2e3443"
                  name="magnify"
                  size={22}
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "flex": 1,
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#AD9130",
                        "display": "flex",
                        "fontFamily": "NotoSans",
                        "fontSize": 16,
                        "lineHeight": 24,
                      },
                      Object {
                        "fontFamily": "NotoSans-Regular",
                      },
                    ]
                  }
                >
                  Buscar
                </Text>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#FFCB05",
              "borderBottomWidth": 1,
              "display": "flex",
              "flex": 1,
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            },
          ]
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            collapsable={false}
            nativeID="animatedComponent"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "borderBottomColor": "#C1C1C1",
                    "borderBottomWidth": 0,
                    "display": "flex",
                    "flexDirection": "row",
                    "marginBottom": 0,
                    "paddingBottom": 16,
                    "width": 340,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "display": "flex",
                        "height": 16,
                        "marginRight": 8,
                        "width": 16,
                      },
                    ]
                  }
                >
                  <SvgMock
                    fill="#000000"
                  />
                </View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#3C3C3C",
                        "display": "flex",
                        "fontFamily": "NotoSans",
                        "fontSize": 14,
                        "lineHeight": 20,
                      },
                      Object {
                        "fontFamily": "NotoSans-Regular",
                      },
                    ]
                  }
                >
                  Leer Luego
                </Text>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#FFCB05",
              "borderBottomWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "display": "flex",
                "paddingBottom": 16,
                "width": "100%",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#2e3443",
                  "display": "flex",
                  "fontFamily": "NotoSans",
                  "fontSize": 16,
                  "fontWeight": "700",
                  "lineHeight": 24,
                },
                Object {
                  "fontFamily": "NotoSans-Bold",
                },
              ]
            }
          >
            SECCIONES
          </Text>
        </View>
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            collapsable={false}
            nativeID="animatedComponent"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderTopColor": "#C1C1C1",
                    "borderTopWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "height": 56,
                    "width": 340,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "height": 16,
                      "marginRight": 8,
                      "padding": 4,
                      "width": 16,
                    },
                  ]
                }
              >
                <SvgMock
                  fill="#6B7280"
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "flex": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#3C3C3C",
                        "display": "flex",
                        "fontFamily": "NotoSans",
                        "fontSize": 14,
                        "lineHeight": 20,
                      },
                      Object {
                        "fontFamily": "NotoSans-Regular",
                      },
                    ]
                  }
                >
                  Portada
                </Text>
              </View>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFDF4",
              "display": "flex",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            },
          ]
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            collapsable={false}
            nativeID="animatedComponent"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "display": "flex",
                    "marginBottom": 16,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#8E8E8E",
                      "display": "flex",
                      "fontFamily": "NotoSans",
                      "fontSize": 14,
                      "lineHeight": 20,
                    },
                    Object {
                      "fontFamily": "NotoSans-Regular",
                    },
                  ]
                }
              >
                T√©rminos y condiciones de uso
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
        <Text
          style={
            Array [
              Object {
                "color": "#6B7280",
                "display": "flex",
                "fontFamily": "NotoSans",
                "fontSize": 14,
                "lineHeight": 20,
              },
              Object {
                "fontFamily": "NotoSans-Regular",
              },
            ]
          }
        >
          Versi√≥n 
          10.5.50
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaProvider>
`;
