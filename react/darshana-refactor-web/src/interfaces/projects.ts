// Generated by https://quicktype.io

export interface IProjects {
  status: boolean;
  message: string;
  links: Links;
  meta: Meta;
  data: IProjectData[];
}
export interface IProject {
  status: boolean;
  message: string;
  data: IProjectData;
  project?: ProjectDetailById;
}
export interface IProjectData {
  id: number;
  recruiter_id: null;
  business_id: number;
  project_status_id: number;
  topic_id: number;
  name: string;
  description: string;
  status: boolean;
  created_at: string;
  updated_at: string;
  deleted_at: null;
  body: string;
  price: number;
  min_salary: number;
  max_salary: number;
  hourly_wage: number;
  image_url: string;
  mobile_image_url: string;
  days: number;
  end_date: string;
  expected_close_at: null;
  weeks: number;
  is_visible: boolean;
  user_uuid: string;
  topic: string;
  business: Business;
  recruiter: null;
  owner: Owner;
  skills: Skill[];
  files: File[];
  work_modality_id: number;
  country_id: number;
  applications: Application[];
}

interface Business {
  id: number;
  user_workplace_id: number;
  user_uuid: string;
  created_at: string;
  updated_at: string;
  deleted_at: null;
  workplace: Workplace;
}

interface Workplace {
  id: number;
  user_uuid: string;
  start_date: string;
  end_date: string;
  description: string;
  work_here: boolean;
  created_at: string;
  updated_at: string;
  deleted_at: null;
  position: string;
  workplace_id: number;
  workplace_name: string;
  enable_business: boolean;
}
export interface Application {
  id: number;
  user_uuid: string;
  project_id: number;
  proposal: string;
  procedure_text: string;
  accept_price: boolean;
  price_proposal: number;
  accept_time: boolean;
  days: number;
  ready_to_close: boolean;
  created_at: Date;
  updated_at: Date;
  deleted_at?: any;
  accepted: number;
  close_at_proposal: Date;
  recieve_pay_at: Date;
  send_pay_at?: any;
  recieve_pay_order_id?: any;
  send_pay_order_id?: any;
  talent_payment?: any;
  weeks: number;
  shown_accepted_message: boolean;
  algorand_transaction?: any;
  near_transaction?: any;
  updated: boolean;
  salary_counter_proposal?: any;
  time_counter_proposal?: any;
  counter_proposal_status: boolean;
  user: User;
}
interface File {
  id: number;
  file_url: string;
  file_size: string;
  created_at: string;
  updated_at: string;
  deleted_at: null;
  project_id: number;
  user_uuid: string;
  file_name: string;
  user: User;
}
interface User {
  uuid: string;
  name: string;
  last_name: string;
  phone: string;
  document_type: string;
  document_number: string;
}
export interface Owner {
  id: number;
  user_uuid: string;
  purpose: null;
  country_id: number;
  created_at: Date;
  updated_at: Date;
  deleted_at: null;
  subtitle: string;
  summary: string;
  profile_picture_url: string;
  profile_banner_url: string;
  is_talent: boolean;
  google_id: null;
  phone: string;
  contact_phone2: null;
  facebook_url: string;
  linkedin_url: string;
  github_url: null;
  contact_email: null;
  contact_phone: null;
  city_id: number;
  paypal_email: string;
  paypal_url: null;
  algo_address: null;
  twitter_url: string;
  default_cover_image_url:string;
  person: Person;
  city?: City;
  country?: Country;
}

export interface City {
  id: number;
  country_iso2: string;
  name: string;
  lat: number;
  lng: number;
  created_at: Date;
  updated_at: Date;
  deleted_at: null;
}

export interface Country {
  id: number;
  name: string;
  nombre: string;
  nom: string;
  iso2: string;
  iso3: string;
  phone_code: string;
  created_at: Date;
  updated_at: Date;
  deleted_at: null;
}

interface Person {
  uuid: string;
  name: string;
  last_name: string;
  phone: string;
  document_type: string;
  document_number: string;
}

interface Skill {
  id: number;
  name: string;
  created_at: string;
  updated_at: string;
  deleted_at: null;
}

interface Links {
  first: string;
  last: string;
  prev: string;
  next: string;
}

interface Meta {
  start: number;
  length: number;
  current_page: number;
  from: number;
  last_page: number;
  path: string;
  per_page: number;
  to: number;
  showing: number;
  total: number;
  fields_map: { [key: string]: string };
}
export interface ProjectDetailById {
  id: number
  business: Business
}

interface Business {
  user_workplace_id: number
  user_uuid: string
  owner: ProjectOwner
}

interface ProjectOwner {
  id: number
  user_uuid: string
  profile_picture_url: string
  users_industry: UsersIndustry
}

interface UsersIndustry {
  industry_id: number
  industry: Industry
}

interface Industry {
  name_en: string
  name_es: string
}